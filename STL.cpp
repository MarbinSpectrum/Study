#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void Display(int value)
{
	printf("%d\n", value);
}

int main()
{
	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "벡터의 크기" << endl;

	vector<int> vec0(100);					//해당방식으로 벡터의 크기를 지정할 수 있따.
	printf("%d\n", vec0.size());	

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "for문으로 벡터 순회" << endl;

	int arr[] = { 1,3,5,7,9 };				//배열의 시작 지점과 끝 지점을 생성자에서 지정하는 것으로 해당 부분을 벡터에 저장한다. (예 : 0 ~ 3까지 저장했음)
	vector<int> vec1(&arr[0], &arr[4]);			
	for(int i = 0; i < vec1.size(); i++)
		printf("%d\n", vec1[i]);			//벡터는 배열같이 요소를 index로 접근이 가능하다.

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "벡터 뒤에 값 추가" << endl;

	vec1.push_back(44);						//push_back을 이용하면 벡터 가장 뒤에 값을 추가 할 수 있다.
	for (int i = 0; i < vec1.size(); i++)
		printf("%d\n", vec1.at(i));			//벡터는 at을 이용해서도 접근이 가능하다.		

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "벡터 뒤에 값 제거" << endl;

	vec1.pop_back();						//pop_back을 이용하면 벡터 가장 뒤에 값을 제거 할 수 있다.
	for (int i = 0; i < vec1.size(); i++)
		printf("%d\n", vec1[i]);

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "iterator을 이용한 순회" << endl;

	for(vector<int>::iterator iter = vec1.begin(); iter != vec1.end(); iter++)		//iterator을 이용해서 값을 받을수있다.
		printf("%d\n", *iter);

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "foreach를 이용한 순회" << endl;

	for_each(vec1.begin(), vec1.end(), Display);

	cout << "-------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "inster를 이용한 배열입력" << endl;

	vector<int> vec2(vec1.size());
	vec2.insert(vec2.begin(), 100);				//inster : 추가값 (위치,추가할값)
	for (int i = 0; i < vec2.size(); i++)
	{
		printf("%d\n", vec2.at(i));			
	}
}
